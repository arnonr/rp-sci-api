// This is your Prisma schema file
// learn more contact it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

//รอดำเนินการ
model user {
    id             Int       @id @default(autoincrement())
    uuid           String    @unique @db.VarChar(100)
    email          String    @unique @db.VarChar(100)
    department_id  Int?
    prefix_name_id Int?
    firstname      String?   @db.VarChar(100)
    lastname       String?   @db.VarChar(100)
    officer_code   String?   @db.VarChar(100)
    id_card        String?   @db.VarChar(100)
    position_id    Int?
    section_id     Int?
    role_id        Int?
    inspector_id   Int?
    bureau_id      Int?
    division_id    Int?
    agency_id      Int?
    phone_number   String?   @db.VarChar(100)
    status         Int?      @db.TinyInt
    line_id        String?   @db.VarChar(100)
    birthday       DateTime? @db.Date
    file_attach    String?   @db.VarChar(200)
    password       String?   @db.VarChar(100)

    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)

    login_log login_log[]
    paper     paper[]
}

model login_log {
    id         Int       @id @default(autoincrement())
    user_id    Int
    logined_at DateTime? @default(now()) @db.DateTime(0)
    ip_address String?   @db.VarChar(100)
    user_agent String    @db.VarChar(200)
    status     Int?      @db.TinyInt
    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)

    user user? @relation(fields: [user_id], references: [id])
}

model file_attach {
    id Int @id @default(autoincrement())

    paper_id   Int?
    filename   String? @db.VarChar(200)
    secret_key String? @db.VarChar(100)

    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)
    paper      paper?    @relation(fields: [paper_id], references: [id])
}

model paper {
    id                Int       @id @default(autoincrement())
    rp_no             String?   @unique @db.VarChar(100)
    user_id           Int?
    title_th          String?   @db.VarChar(1000)
    title_en          String?   @db.VarChar(1000)
    abstract          String?
    keyword           String?   @db.VarChar(1000)
    department_id     Int?
    paper_type_id     Int?
    history           String?
    objective         String?
    scope             String?
    review_literature String?
    method            String?
    benefit           String?
    location          String?
    references        String?
    status_id         Int?
    sended_at         DateTime?
    sended_user_id    Int?
    approved_at       DateTime?
    approved_user_id  Int?
    created_at        DateTime? @default(now()) @db.DateTime(0)
    created_by        String?   @db.VarChar(32)
    updated_at        DateTime? @default(now()) @db.DateTime(0)
    updated_by        String?   @db.VarChar(32)
    deleted_at        DateTime?
    deleted_by        String?   @db.VarChar(32)
    is_active         Int?      @default(1)

    researcher   researcher[]
    method_list  method_list[]
    budget       budget[]
    file_attach  file_attach[]
    return_paper return_paper[]

    user       user?       @relation(fields: [user_id], references: [id])
    review     review[]
    paper_type paper_type? @relation(fields: [paper_type_id], references: [id])
    department department? @relation(fields: [department_id], references: [id])
}

model researcher {
    id              Int       @id @default(autoincrement())
    prefix_name     String?   @unique @db.VarChar(100)
    firstname       String?   @db.VarChar(1000)
    surname         String?   @db.VarChar(1000)
    department_id   Int?
    department_text String?   @db.VarChar(1000)
    phone_number    String?   @db.VarChar(1000)
    expertise       String?   @db.VarChar(1000)
    researcher_type Int? // 1 หัวหน้าโครงการ //2ที่ปรึกษา //3 ผู้ร่วมวิจัย
    percentage      Int?
    paper_id        Int?
    created_at      DateTime? @default(now()) @db.DateTime(0)
    created_by      String?   @db.VarChar(32)
    updated_at      DateTime? @default(now()) @db.DateTime(0)
    updated_by      String?   @db.VarChar(32)
    deleted_at      DateTime?
    deleted_by      String?   @db.VarChar(32)
    is_active       Int?      @default(1)

    paper paper? @relation(fields: [paper_id], references: [id])
}

model method_list {
    id         Int       @id @default(autoincrement())
    start_date String?   @unique @db.VarChar(100)
    end_date   String?   @db.VarChar(1000)
    detail     String?
    paper_id   Int?
    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)

    paper paper? @relation(fields: [paper_id], references: [id])
}

model budget {
    id         Int       @id @default(autoincrement())
    detail     String?
    amount     Decimal?  @default(0.0)
    paper_id   Int?
    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)
    paper      paper?    @relation(fields: [paper_id], references: [id])
}

model return_paper {
    id         Int       @id @default(autoincrement())
    detail     String?
    paper_id   Int?
    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)
    paper      paper?    @relation(fields: [paper_id], references: [id])
}

model review {
    id            Int       @id @default(autoincrement())
    detail        String?
    review_status Int?
    reviewer_id   Int?
    paper_id      Int?
    is_send_mail  Int?
    created_at    DateTime? @default(now()) @db.DateTime(0)
    created_by    String?   @db.VarChar(32)
    updated_at    DateTime? @default(now()) @db.DateTime(0)
    updated_by    String?   @db.VarChar(32)
    deleted_at    DateTime?
    deleted_by    String?   @db.VarChar(32)
    is_active     Int?      @default(1)
    paper         paper?    @relation(fields: [paper_id], references: [id])
    reviewer      reviewer? @relation(fields: [reviewer_id], references: [id])
}

model reviewer {
    id                Int       @id @default(autoincrement())
    prefix_name       String?   @db.VarChar(1000)
    firstname         String?   @db.VarChar(1000)
    surname           String?   @db.VarChar(1000)
    organization_name String?   @db.VarChar(1000)
    created_at        DateTime? @default(now()) @db.DateTime(0)
    created_by        String?   @db.VarChar(32)
    updated_at        DateTime? @default(now()) @db.DateTime(0)
    updated_by        String?   @db.VarChar(32)
    deleted_at        DateTime?
    deleted_by        String?   @db.VarChar(32)
    is_active         Int?      @default(1)
    review            review[]
}

model paper_type {
    id         Int       @id @default(autoincrement())
    name       String?   @db.VarChar(1000)
    start_date DateTime? @default(now()) @db.DateTime(0)
    end_date   DateTime? @default(now()) @db.DateTime(0)
    year       String?   @db.VarChar(1000)
    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)
    paper      paper[]
}

model department {
    id         Int       @id @default(autoincrement())
    name       String?   @db.VarChar(1000)
    created_at DateTime? @default(now()) @db.DateTime(0)
    created_by String?   @db.VarChar(32)
    updated_at DateTime? @default(now()) @db.DateTime(0)
    updated_by String?   @db.VarChar(32)
    deleted_at DateTime?
    deleted_by String?   @db.VarChar(32)
    is_active  Int?      @default(1)
    paper      paper[]
}
